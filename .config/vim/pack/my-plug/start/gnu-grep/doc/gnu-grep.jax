*gnu-grep* execute gnu grep

Author:  Iranoan <iranoan+vim@gspell.com>
Repository: https://github.com/iranoan/gnu-grep
License: GPL Ver.3.


==============================================================================
                                                            *gnu-grep-contents*
目次~

	* 概要                                                 |gnu-grep-introduction|
	* 要件                                                 |gnu-grep-require|
	* 使用方法                                             |gnu-grep-use|
		- 必ず付けるオプション                               |gnu-grep-option|
		- 補完                                               |gnu-grep-snippet|
		- 関数                                               |gnu-grep-function|


==============================================================================
                                                   *gnu-grep-introduction* *:Grep*
概要~

- 幾つかのプションをつけて |:silent| |grep|, |:silent| |lgrep| を実行する
- 標準では --exclude= を使って検索対象から除外する
	* 現状、除外するファイル種類の設定は用意していない
		|'wildignore'| の使用も考えたが、これは |i_Ctrl-X_Ctrl-F| のファイル名の入力な
		ど補完候補にも影響するので、画像などバイナリ・ファイルは含めたくない
	* --include を使うと --exclude= は使わない
- 幾つかのオプションを補完できる

==============================================================================
                                                              *gnu-grep-require*
要件~

- Vim
- GNU grep
	|grepprg| に GNU grep を設定する
	例: >
	set grepprg=/usr/bin/grep\ $*\ /dev/null
<
==============================================================================
                                                                  *gnu-grep-use*
使用方法~

                                               *:Grep* *:LGrep* *:Grepadd* *:LGrepadd*
- |:Grep| を使えば、幾つかのオプションを付けて |:silent| |grep| を実行する
- |:LGrep| を使えば、幾つかのオプションを付けて |:silent| |lgrep| を実行する
- |:Grepadd| を使えば、幾つかのオプションを付けて |:silent| |grepadd| を実行する
- |:LGrepadd| を使えば、幾つかのオプションを付けて |:silent| |lgrepadd| を実行する
- どれも ! を付けると、ファイル、カーソル位置を移動させない
- --include を使わなければ --exclude= を使い主なバイナリ・ファイル等を除外する
- %, # はバッファ名としてではなく、エスケープして文字列として処理する
- |'errorformat'| にマッチさせるため
	* 次の組み合わせは -m (--max-count=)1 に置き換える場合が有る
		+ -l (--files-with-matches) が有り -v (--invert-match) のない時
		+ -L (--files-without-match) と -v (--invert-match) の両方が有る時
	* -L (--files-without-match) の結果にも行番号を付けて出力 *gnu_grep#SetQfTitle()*
	* $MYVIMDIR/after/ftplugin/qf.vim 等で >
			call gnu_grep#SetQfTitle()
<		と記載すると、必ず付けるオプション (|gnu-grep-option|) を |w:quickfix_title| か
		ら除外する
		結果として |status-line| の表示内容を変えられる

                                                               *gnu-grep-option*
必ず付けるオプション~

	* -H (--with-filename)
	* -I (--binary-files=without-match)
	* --color=never
	* --exclude-dir=.git
	* -d (--directories=)skip
	* -n (--line-number)
	* -s (--no-messages)
	* --exclude
		+ --include を使ってない時に追加し、画像などの代表的なバイナリファイルを除外
		+ 速度を上げるためでも有る

                                                               *gnu-grep-snippet*
補完~

	* -A, --after-context=
	* -B, --before-context=
	* -C, --context=
	* -E, --extended-regexp
	* -e, --regexp=
	* -f, --file=
	* -F, --fixed-strings
	* -G, --basic-regexp
	* -i, --ignore-case
	* --include=
	* -l, --files-with-matches
	* -L, --files-without-match
	* -m,  --max-count=
	* -o, --only-matching
	* -P, --perl-regexp
	* -R, --dereference-recursive
	* -r, --recursive
	* -s, --no-messages
	* -T, --initial-tab
	* -v, --invert-match
	* -w, --word-regexp
	* -x, --line-regexp
	を補完候補として表示する

	この内、次のオプションは次の引数ではファイル・ディレクトリ名の補完もできる
		+ -f, --file=
		+ -R, --dereference-recursive
		+ -r, --recursive

	ただし
		* `` と $() はその対応/開閉をチェックしていないので、上手く補完が働かない
			ケースが有る
		* ファイル/ディレクトリ名の補完は空白を含む場合や引用符で囲む場合に未対応

vim:tw=78:ts=2:ft=help:norl:noet:fen:
