*map-markdown*

==============================================================================
概要~

Markdown マップ用の関数
                                                              *map-markdown-use*
==============================================================================
使用法~

下記の関数 (|map-markdown-function|) を次のようにマッピング
>
	inoremap <buffer><expr><CR>    map_markdown#Enter()
<                                                         *map-markdown-function*
==============================================================================
関数~
                                                       *map_markdown#BackSpace()*
BackSpace()~

* 箇条書きのインデント部分で空白文字をその箇条書きやインデントに合わせて纏めて
	消す
* 箇条書きの番号/記号の種類の違いで必要なインデント量が違うので、それに合わせ
	空白を一塊りに扱う
* インデントもなく箇条書きでもなければ <BS> そのものの動き

次の例で | がカーソル一を表し、^ までが順に纏めて消される場所になる
 >
	    indent
	    indent
	    |
  ^
	1. order list
	1. order list
	   * unoder list
	   * unoder list
	     * unoder list
	       1. order list
	       1. order list
	       1. |
	^  ^ ^ ^
<
                                                           *map_markdown#Enter()*
Enter()~

|autoindent|, |cindent|, |smartindent| の値に関わらず、カレント行の行頭やカーソル直前
の空白文字に合わせて次行のインデントや箇条書きのマークを追加する

	* 次行が空で、現在行が空白文字や箇条書きの記号/番号のみの時はそれを削除し改行
		* Word の「箇条書き」「段落番号」の最終行の動きに似せている
	* # で始まる見出しの行では改行を 2 つ入れる
	* 見出しでも箇条書きでもなくインデントもない場合は、普通に改行を入れる
	* 直前が 2 つの連続する空白の時は、現在行のインデント量に加え箇条書きの記号/
		番号に応じた文の空白を次行に加えように改行する
	* 現在行が箇条書きやインデントがあれば、インデント量に加え、同じ深さの箇条書
		きの記号/番号を次行に加えように改行する
	* 上記のどれでもなければ <CR> そのものの動き
                                                            *map_markdown#Space()*
Space()~

	* * は強調/箇条書き始まり、2つの可能性があるので、* 直後の空白は、すぐ後ろが *
		ならばそれを消し箇条書きの始まりにする
	* 直前が * でなければ、<Space> そのものの動き
                                                              *map_markdown#Tab()*
Tab()~

* 箇条書きのマークに合わせて空白を入れる
	* 上の行のインデントや箇条書きの記号/番号分よりインデントが少ない時は、上記
		BackSpace() (|map_markdown#BackSpace()|) の ^ 部分まで空白を入れる
* インデントもなく箇条書きでもない、もしくは既にインデント量が多い時はの <Tab>
	そのももの動き
	* |'tabstop'|, |'expandtab'| に合わせた動きになる

vim:tw=78:ts=2:ft=help:norl:noet:fen:
