vim9script
scriptencoding utf-8
set antialias             # アンチエイリアス
set columns=168           # columns width of the display
set lines=999             # lines number of lines in the display
if has('unix')            # 使用フォント(最初に見つかったフォントを使う)
	set guifont=RictyDiminished\ Nerd\ Font\ Regular\ 14,Ricty\ Diminished\ Regular\ 14,Noto\ Mono\ 13,Monospace\ 12
else
	set guifont=RictyDiminished\ Nerd\ Font:h14,Ricty\ Diminished\ Regular:h14,MS_Gothic:h13,Monaco:h10
endif
# if exists('&ambiwidth')  # guifont を指定すると auto にされるらしい←勘違い?
# 	set ambiwidth=double
# endif
set guioptions-=T guioptions-=m # ツール・バー/メニュー表示を OFF
augroup GVIMRC
	autocmd!
	# 画面左上に表示 (help に有る通り autocmd を使わないと環境によって gvimrc の記載では無効)
	autocmd GUIEnter * winpos 0 0 | autocmd! GVIMRC
	# autocmd VimEnter,GUIEnter * if &lines != 48 | set lines=48 | endif | autocmd! GVIMRC
	# ↑GTK でズレが生じるため再設定 https://github.com/vim-jp/issues/issues/1374
	# lines=999 としたのでコメントに
augroup END
# ホイール・スクロールは [Shift] 押しながらと逆にする {{{
nnoremap <ScrollWheelUp>     <S-ScrollWheelUp>
nnoremap <S-ScrollWheelUp>   <ScrollWheelUp>
nnoremap <ScrollWheelDown>   <S-ScrollWheelDown>
nnoremap <S-ScrollWheelDown> <ScrollWheelDown>
xnoremap <ScrollWheelUp>     <C-U>
xnoremap <ScrollWheelDown>   <C-D>
# }}}

def g:Toggle_menu()
	if &guioptions =~# 'm'
		silent set guioptions-=m
	else
		silent set guioptions+=m
	endif
enddef

def g:MakeGUItabline(): string
	var label: string = '%N|'
	var c_win = tabpagewinnr(v:lnum)
	var info: dict<any>
	# ウィンドウが複数あるときにはその数を追加する
	var wincount = tabpagewinnr(v:lnum, '$')
	if wincount > 1
		label ..= wincount
	endif
	# このタブページに変更のあるバッファは '+' を追加する
	for bufnr in tabpagebuflist(v:lnum)
		if getbufvar(bufnr, '&modified') && !get(getwininfo(getbufinfo(bufnr)[0]['windows'][0])[0], 'terminal', 0)
			label ..= '+'
			break
		endif
	endfor
	if label !~# '+$'
		label ..= '  ' # 空白 1 つでは、+ より幅が狭い
	endif
	# :terminal や filetype 別にを分ける
	for id in gettabinfo(v:lnum)[0]['windows']
		info = getwininfo(id)[0]
		if info.winnr == c_win
			if get(info, 'terminal', 0)
				return label .. substitute(&shell, '^.\+/', '!', '') #.. ' [' .. substitute(getcwd(), '^' .. $HOME, '~', '') .. ']' # ← cd 未対応 pwd もダメ
			endif
			if &filetype =~# '^notmuch-'
				return label .. notmuch_py#GetGUITabline()
			elseif &filetype ==# 'fugitive' || &filetype == 'git'
				return label .. '%y'
			endif
			break
		endif
	endfor
	return label .. ' %t'
enddef
